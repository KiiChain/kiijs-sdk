syntax = "proto3";
package kiichain.kiichain3.evm;

import "google/api/annotations.proto";
import "evm/enums.proto";

option go_package = "github.com/kiichain/kiichain/x/evm/types";

// Query defines the gRPC querier service.
service Query {
    rpc KiiAddressByEVMAddress(QueryKiiAddressByEVMAddressRequest) returns (QueryKiiAddressByEVMAddressResponse) {
        option (google.api.http).get = "/kiichain/evm/kii_address";
    }

    rpc EVMAddressByKiiAddress(QueryEVMAddressByKiiAddressRequest) returns (QueryEVMAddressByKiiAddressResponse) {
        option (google.api.http).get = "/kiichain/evm/evm_address";
    }

    rpc StaticCall(QueryStaticCallRequest) returns (QueryStaticCallResponse) {
        option (google.api.http).get = "/kiichain/evm/static_call";
    }

    rpc Pointer(QueryPointerRequest) returns (QueryPointerResponse) {
        option (google.api.http).get = "/kiichain/evm/pointer";
    }

    rpc PointerVersion(QueryPointerVersionRequest) returns (QueryPointerVersionResponse) {
        option (google.api.http).get = "/kiichain/evm/pointer_version";
    }

    rpc Pointee(QueryPointeeRequest) returns (QueryPointeeResponse) {
        option (google.api.http).get = "/kiichain/evm/pointee";
    }
}

message QueryKiiAddressByEVMAddressRequest {
    string evm_address = 1;
}

message QueryKiiAddressByEVMAddressResponse {
    string kii_address = 1;
    bool associated = 2;
}

message QueryEVMAddressByKiiAddressRequest {
    string kii_address = 1;
}

message QueryEVMAddressByKiiAddressResponse {
    string evm_address = 1;
    bool associated = 2;
}

message QueryStaticCallRequest {
    bytes data = 1;
    string to = 2;
}

message QueryStaticCallResponse {
    bytes data = 1;
}

message QueryPointerRequest {
    PointerType pointer_type = 1;
    string pointee = 2;
}

message QueryPointerResponse {
    string pointer = 1;
    uint32 version = 2;
    bool exists = 3;
}

message QueryPointerVersionRequest {
    PointerType pointer_type = 1;
}

message QueryPointerVersionResponse {
    uint32 version = 1;
    uint64 cw_code_id = 2;
}

message QueryPointeeRequest {
    PointerType pointer_type = 1;
    string pointer = 2;
}

message QueryPointeeResponse {
    string pointee = 1;
    uint32 version = 2;
    bool exists = 3;
}